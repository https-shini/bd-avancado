create table tbCliente(
	idCliente number generated by default as identity primary key,
    nomeCliente varchar2(50),
    emailCliente varchar2(50)
);

create table tbProduto(
    idProduto number generated by default as identity primary key,
    produto varchar2(100),
    valor number(10,2),
    estoque number    
);

create table tbCarrinho(
    idCarrinho number generated by default as identity primary key,
    idCliente number,
    dataCriacao date,
    status varchar2(40), -- ativo, finalizado, abandonado
    foreign key (idCliente) references tbCliente(idCliente)
);

create table tbItemCarrinho(
    idItemCarrinho number generated by default as identity primary key,
    idCarrinho number,
    idProduto number,
    quantidade number,
    foreign key (idCarrinho) references tbCarrinho(idCarrinho),
    foreign key (idProduto) references tbProduto(idProduto)
);

create table tbPedido(
    idPedido number generated by default as identity primary key,
    idCarrinho number,    
    dataPedido date,
    statusPedido varchar2(40), -- pendente, pago, enviado, entregue, cancelado
    foreign key (idCarrinho) references tbCarrinho(idCarrinho)    
);

create table tbPagamento(
    idPagamento number generated by default as identity primary key,
    idPedido number,
    valorPagamento number(10,2),
    formaPagamento varchar2(40),
    statusPagamento varchar2(40), -- aprovado, recusado, pendente
    dataPagamento date,
    foreign key (idPedido) references tbPedido(idPedido)  
);

insert into tbCliente (nomeCliente, emailCliente) values ('João Silva', 'joao.silva@email.com');
insert into tbCliente (nomeCliente, emailCliente) values ('Maria Oliveira', 'maria.oliveira@email.com');
insert into tbCliente (nomeCliente, emailCliente) values ('Carlos Souza', 'carlos.souza@email.com');
insert into tbCliente (nomeCliente, emailCliente) values ('Ana Costa', 'ana.costa@email.com');
insert into tbCliente (nomeCliente, emailCliente) values ('Pedro Lima', 'pedro.lima@email.com');


insert into tbProduto (produto, valor, estoque) values ('Notebook Dell Inspiron', 3500.00, 15);
insert into tbProduto (produto, valor, estoque) values ('Smartphone Samsung Galaxy', 2200.00, 30);
insert into tbProduto (produto, valor, estoque) values ('Fone de Ouvido Bluetooth', 150.00, 100);
insert into tbProduto (produto, valor, estoque) values ('Monitor LG 24"', 900.00, 20);
insert into tbProduto (produto, valor, estoque) values ('Teclado Mecânico RGB', 320.00, 40);


insert into tbCarrinho (idCliente, dataCriacao, status) values (1, sysdate, 'ativo');
insert into tbCarrinho (idCliente, dataCriacao, status) values (2, sysdate-1, 'finalizado');
insert into tbCarrinho (idCliente, dataCriacao, status) values (3, sysdate-2, 'ativo');
insert into tbCarrinho (idCliente, dataCriacao, status) values (4, sysdate-3, 'abandonado');
insert into tbCarrinho (idCliente, dataCriacao, status) values (5, sysdate-4, 'finalizado');


insert into tbItemCarrinho (idCarrinho, idProduto, quantidade) values (1, 1, 1); 
insert into tbItemCarrinho (idCarrinho, idProduto, quantidade) values (1, 3, 2); 
insert into tbItemCarrinho (idCarrinho, idProduto, quantidade) values (2, 2, 1); 
insert into tbItemCarrinho (idCarrinho, idProduto, quantidade) values (3, 4, 1); 
insert into tbItemCarrinho (idCarrinho, idProduto, quantidade) values (5, 5, 1); 


insert into tbPedido (idCarrinho, dataPedido, statusPedido) values (2, sysdate-1, 'pago');
insert into tbPedido (idCarrinho, dataPedido, statusPedido) values (5, sysdate-4, 'pendente');
insert into tbPedido (idCarrinho, dataPedido, statusPedido) values (1, sysdate, 'pendente');  
insert into tbPedido (idCarrinho, dataPedido, statusPedido) values (3, sysdate-2, 'cancelado');
insert into tbPedido (idCarrinho, dataPedido, statusPedido) values (4, sysdate-3, 'pendente'); 


insert into tbPagamento (idPedido, valorPagamento, formaPagamento, statusPagamento, dataPagamento) 
values (1, 2200.00, 'Cartão de Crédito', 'aprovado', sysdate-1);

insert into tbPagamento (idPedido, valorPagamento, formaPagamento, statusPagamento, dataPagamento) 
values (2, 320.00, 'PIX', 'pendente', sysdate-4);

insert into tbPagamento (idPedido, valorPagamento, formaPagamento, statusPagamento, dataPagamento) 
values (3, 3800.00, 'Boleto', 'pendente', sysdate);

insert into tbPagamento (idPedido, valorPagamento, formaPagamento, statusPagamento, dataPagamento) 
values (4, 900.00, 'Cartão de Débito', 'recusado', sysdate-2);

insert into tbPagamento (idPedido, valorPagamento, formaPagamento, statusPagamento, dataPagamento) 
values (5, 0.00, 'Nenhum', 'pendente', sysdate-3);


select * from tbCliente;
select * from tbProduto;
select * from tbCarrinho;
select * from tbItemCarrinho;
select * from tbPedido;
select * from tbPagamento;



-------------------------------------------------

-- Exemplo de procedure com select
create or replace procedure sp_exibir
    is
begin
	for resposta in (select * from tbCliente order by idCliente) loop
        dbms_output.put_line('ID: ' || resposta.idCliente || 
                             ' | Nome: ' || resposta.nomeCliente || 
                             ' | Email: ' || resposta.emailCliente);
    end loop;
end;

exec sp_exibir

----------------------------------------------------------------------

create or replace procedure spInsertClient(
    vNome varchar2,
    vEmail varchar2
)
as
begin
    if length(vNome) <3 or length(vEmail) <3 then    
    	dbms_output.put_line('Dados inválidos');	
	else
        insert into tbCliente values (default,vNome,vEmail);		
		dbms_output.put_line('Dados Cadastrados com sucesso');
	end if;
end;

exec spInsertClient('Bruno','bruno@gmail.com');

---------------------------------------------------------------------

--Exemplo com parâmetro out

create or replace procedure spInsertClient2(
    vNome in varchar2,
    vEmail in varchar2,
    status out varchar2
)
as
begin
    if length(vNome) <3 or length(vEmail) <3 then    
    	dbms_output.put_line('Dados inválidos');	
		status := 'false';
	else
        insert into tbCliente values (default,vNome,vEmail);		
		dbms_output.put_line('Dados Cadastrados com sucesso');
		status := 'true';
	end if;
end;

declare
	vResposta varchar2(40);
begin
	spInsertClient2(
    	vNome => 'B',
    	vEmail => 'beatriz@gmail.com',
    	status => vResposta
    );

	dbms_output.put_line(vResposta);
end;

-----------------------------------------------------------------

declare
    disciplina varchar2(40) := 'Laboratório de Banco de Dados Avançado';
	curso varchar2(40) := ' Ciência da Computação';
	tudo varchar2(80);
	email varchar2(40) := 'aluno@cruzeirodosul.edu.br';
	texto varchar2(40) := '    Aula de Hoje      ';
begin
    
	dbms_output.put_line(length(disciplina));
	dbms_output.put_line(upper(disciplina));
	dbms_output.put_line(lower(disciplina));

	tudo := concat(disciplina,curso);
	dbms_output.put_line(tudo);

	dbms_output.put_line(substr(curso,2,7));
	dbms_output.put_line(instr(email,'@'));
	dbms_output.put_line(replace(disciplina,'Banco de Dados','Database'));
	dbms_output.put_line(trim(texto));
	dbms_output.put_line(reverse(texto));
end;





--https://docs.oracle.com/en/database/oracle/oracle-database/19/sqlrf/Functions.html
